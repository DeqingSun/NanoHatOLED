At the beginning of 2021. Only Nano Pi Neo can be found. Neo2 not anymore because H5 CPU was EOF.

Try dietpi, seems smaller? from https://dietpi.com/downloads/images/DietPi_NanoPiNEO-ARMv7-Buster.7z
Put DietPi_NanoPiNEO-ARMv7-Buster.img on tf card. Check in Ubuntu, 476M regular partition.

ssh root@<ip> , login with password dietpi.

Enter config screen, press enter to OK.

Keep password, keep serial.

Exit dietpi-software for now. Choose install directly. OK.

Todo: Change time zone. dpkg-reconfigure tzdata

Test OLED first. Refer to https://dietpi.com/phpbb/viewtopic.php?t=3077

ssh dietpi@<ip> , login with password dietpi.
sudo dietpi-software

<Software Additional> => 130 Python Pip
<Software Additional> => 16 Build Essentials
<Software Additional> => 17 Git

Reboot required.

sudo apt-get install libfreetype6-dev libjpeg-dev
sudo pip install --upgrade ssd1306
git clone https://github.com/friendlyarm/NanoHatOLED.git && cd NanoHatOLED && sudo -H ./install.sh

Not working?
cat /tmp/nanoled-python.log
seems i2c not work.
Check https://dietpi.com/phpbb/viewtopic.php?t=7796
using overlay sun8i-h3ls
Check /boot/dtb/sun8i-h3-nanopi-neo.dtb /boot/dtb/overlay/README.sun8i-h3-overlays
support i2c0
Add i2c0 to overlays in /boot/armbianEnv.txt
reboot

the PIL error. Seems default pip install for python3
sudo apt-get install python-setuptools
sudo pip2 install pillow

And finally running!

increase i2c speed. Now the screen take 1S to refresh
sudo apt-get install device-tree-compiler
fdtdump /boot/dtb/sun8i-h3-nanopi-neo.dtb
fdtdump /boot/dtb/sun8i-h3-nanopi-neo.dtb | grep i2c
sudo fdtget -p /boot/dtb/sun8i-h3-nanopi-neo.dtb /soc/i2c@1c2ac00
sudo fdtget --type u /boot/dtb/sun8i-h3-nanopi-neo.dtb /soc/i2c@1c2ac00 clock-frequency
sudo fdtput --type u /boot/dtb/sun8i-h3-nanopi-neo.dtb /soc/i2c@1c2ac00 clock-frequency 400000
sudo fdtget --type u /boot/dtb/sun8i-h3-nanopi-neo.dtb /soc/i2c@1c2ac00 clock-frequency
reboot

change ssh from dropbear to OpenSSH to use sftp
sudo dietpi-software

replace script

auto start (Note the first 2 ways don't work well. Use service method)
cp /usr/local/bin/oled-start /var/lib/dietpi/postboot.d/oled-start.sh

sudo dietpi-software
Disable boot net wait 
change to autostart. remove the /var/lib/dietpi/postboot.d/oled-start.sh
edit /var/lib/dietpi/dietpi-autostart/custom.sh
add
/home/dietpi/NanoHatOLED/NanoHatOLED
not work well,
remove it

sudo nano /etc/systemd/system/early_oled.service
add

[Unit]
Description=OLED start script early
After=local-fs.target
Before=network.target

[Service]
Type=simple
RemainAfterExit=yes
ExecStart=sudo /home/dietpi/NanoHatOLED/NanoHatOLED

[Install]
WantedBy=network.target

then
sudo systemctl daemon-reload
sudo systemctl enable early_oled.service

change time zone to NY

dpkg-reconfigure tzdata



#####

Edit partition

In ubuntu, use GParted tool.

umount partitions first.
Shrink /dev/sdb2. 2.73G used, just shrink it to 4200MB. Note the minimal when I test was about 4100MB.
Will try to expand later.
In the unallocated space, add new partition (primary fat16). Make it 200MB for now. Add label such as "scripts".

Apply operation. It takes some time. And a Fat disk will be visible at any computer.

check partitions:
lsblk -P -f -p
get the device name such as /dev/mmcblk0p2

create mounting point:
mkdir /home/dietpi/fatDisk

try to mount
sudo mount /dev/mmcblk0p2 /home/dietpi/fatDisk

edit /etc/fstab for auto mount
sudo nano /etc/fstab
add such as:
/dev/mmcblk0p2    /home/dietpi/fatDisk vfat rw,dev,auto,async,users,exec,umask=0000,uid=1000,gid=1000 0 0

reboot and check if the files are there
ls -al /home/pi/fatDisk
they should be all 777 permission

####


debug python:
kill script use util
sudo python /root/NanoHatOLED/BakeBit/Software/Python/bakebit_nanohat_oled.py
send keystroke use util

install tools
sudo apt-get install openocd
sudo apt-get install avrdude


backup pi
get end sector
sudo parted /dev/sdb unit s print
I got

Model: APPLE SD Card Reader (scsi)
Disk /dev/sdb: 31116288s
Sector size (logical/physical): 512B/512B
Partition Table: msdos
Disk Flags: 

Number  Start     End       Size      Type     File system  Flags
 1      8192s     8609791s  8601600s  primary  ext4
 2      8609792s  9019391s  409600s   primary  fat16

make it a bit bigger (sudo in front of dd, or sudo -i)
sudo dd if=/dev/sdb of=backup.img bs=512 count=9019395 conv=fsync

Or add some 0 before backup
cat /dev/zero > /mnt/X/big_zero ; sync; rm /mnt/X/big_zero

then zip the image. Worked well 


